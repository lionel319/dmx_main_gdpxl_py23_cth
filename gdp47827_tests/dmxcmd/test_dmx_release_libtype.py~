#!/usr/bin/env python
# 2014 Altera Corporation. All rights reserved. This source code is highly
# confidential and proprietary information of Altera and is to be used for
# internal Altera purposes only.   Altera assumes no responsibility or
# liability arising out of the application or use of this source code for
# non-Altera purposes.
#
# Tests the abnr icm library
#
# $File: //depot/da/infra/dmx/main_gdpxl_py23_cth/gdp47827_tests/dmxcmd/test_dmx_release_libtype.py $
# $Revision: #2 $
# $Change: 7480210 $
# $DateTime: 2023/02/12 18:55:59 $
# $Author: lionelta $

from __future__ import print_function
import unittest
import inspect
import os
import sys
import re

LIB = os.path.join(os.path.dirname(os.path.dirname(os.path.dirname(os.path.realpath(__file__)))), 'lib', 'python')
sys.path.insert(0, LIB)
import dmx.utillib.utils
import dmx.utillib.contextmgr

class TestDmxReleaseLibtype(unittest.TestCase):
    
    @classmethod
    def setUpClass(cls):
        pass

    def setUp(self):
        self.dmx = os.path.join(LIB, '..', '..', 'bin', 'dmx.py')
        self.rc = dmx.utillib.utils.run_command
        self.dmxpath = os.path.join(LIB, 'dmx', 'tnrlib', 'release_runner.py')
        self.dmxdatapath = '/p/psg/flows/common/dmxdata/14.7'
        self.setenv = 'env DB_THREAD=LTMrevA0 DB_DEVICE=LTM DB_FAMILY=Libertymesa DMXREL_DMXPATH={} DMXREL_DMXDATAPATH={}'.format(self.dmxpath, self.dmxdatapath)

    def tearDown(self):
        pass
  
    def test_101___dmx_release_libtype___successful(self):
        cmd = '{} {} release -p da_i16 -i dai16liotest2 -d bcmlib -b dev -m 1.0 -t LTMrevA0 --debug --regmode --syncpoint LIONEL --desc testing_py23'.format(self.setenv, self.dmx)
        exitcode, stdout, stderr = self.rc(cmd, maxtry=1)
        print("exitcode: {}\nstdout: {}\nstderr: {}\n".format(exitcode, stdout, stderr))
        self.assertTrue(bool(re.search("Release .* created", stdout+stderr)))




if __name__ == '__main__':
    unittest.main()
